age_K = np.random.randint(a_min, a_max + 1, size=(K, 1))
    age_J = np.random.randint(a_min, a_max + 1, J)
    print(age_K)
    salary_K = np.random.uniform(s_min, s_max, size=(K, 1))
    salary_J = np.random.uniform(s_min, s_max, J)
    sal_selfemp_K = np.random.randint(0, 2, size=(K, 1))
    sal_selfemp_J = np.random.randint(0, 2, J)
    chi_K = np.random.uniform(0   ,   1,  size=(K, 1))
    chi_J = np.random.uniform(0   ,   1,  J)
    print(age_K,salary_K,sal_selfemp_K)
    vec_J =  np.concatenate([age_J,salary_J,sal_selfemp_J], axis=1)
    vec_K =  np.concatenate([age_K,salary_K,sal_selfemp_K], axis=1)